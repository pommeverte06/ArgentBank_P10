swagger: "2.0"
info:
  title: ArgentBank Transactions API
  description: API for managing user transactions
  version: "1.0.0"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
security:
  - Bearer: []
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: User Login
      description: API for user authentication
      parameters:
        - in: body
          name: body
          description: User login credentials
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid credentials
        "401": 
          description: Not authorized
        "500":
          description: Internal server error

  /user/signup:
    post:
      tags:
        - User Module
      summary: User Signup
      description: API for creating a new user account
      parameters:
        - in: body
          name: body
          description: User signup details
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid data
        "401": 
          description: Not authorized
        "409":
          description: User already exists
        "500":
          description: Internal server error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Fetch User Profile
      description: API for retrieving the authenticated user's profile
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid request
        "401": 
          description: Not authorized
        "500":
          description: Internal server error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile
      description: API for updating the authenticated user's profile
      parameters:
        - in: body
          name: body
          description: Profile data to update
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid data
        "401": 
          description: Not authorized
        "500":
          description: Internal server error

  /user/account/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Retrieve Transactions
      description: API for fetching all transactions for a user's account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: string
          required: true
          description: ID of the user's account
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "401": 
          description: Not authorized
        "404":
          description: Transactions not found
        "500":
          description: Internal server error

  /user/account/{accountId}/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Retrieve Transaction by ID
      description: API for fetching a specific transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: string
          required: true
          description: ID of the user's account
        - in: path
          name: transactionId
          type: string
          required: true
          description: ID of the transaction to retrieve
      produces:
        - application/json
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid ID provided
        "401": 
          description: Not authorized
          
        "404":
          description: Transaction not found
        "500":
          description: Internal server error
    patch:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Update Transaction
      description: API for updating a user's transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: string
          required: true
          description: ID of the user's account
        - in: path
          name: transactionId
          type: string
          required: true
          description: ID of the transaction to update
        - in: body
          name: body
          description: Updated transaction details
          required: true
          schema:
            $ref: "#/definitions/TransactionUpdate"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid fields provided
        "401": 
          description: Not authorized
        "404":
          description: Transaction not found
        "500":
          description: Internal server error

  /user/register:
    post:
      tags:
        - User Management
      summary: Create User Account
      description: API for user registration
      parameters:
        - in: body
          name: body
          description: User registration data
          required: true
          schema:
            $ref: "#/definitions/UserRegister"
      produces:
        - application/json
      responses:
        "201":
          description: User account created successfully
          schema:
            $ref: "#/definitions/UserProfile"
        "401": 
          description: Not authorized
        "400":
          description: Invalid data provided
        "409":
          description: User already exists
        "500":
          description: Internal server error

definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: User's email
      password:
        type: string
        description: User's password
      firstName:
        type: string
        description: User's first name
      lastName:
        type: string
        description: User's last name
      username:
        type: string
        description: User's username
  Login:
    type: object
    properties:
      email:
        type: string
        description: User's email
      password:
        type: string
        description: User's password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      username:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      transactionData:
        type: object
        properties:
          date:
            type: string
          description:
            type: string
          amount:
            type: number
          details:
            type: object
            properties:
              type:
                type: string
              category:
                type: string
              notes:
                type: string
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
      notes:
        type: string
  UserRegister:
    type: object
    properties:
      firstName:
        type: string
        description: User's first name
      lastName:
        type: string
        description: User's last name
      username:
        type: string
        description: User's username
      email:
        type: string
        description: User's email (must be unique)
      password:
        type: string
        description: User's password
